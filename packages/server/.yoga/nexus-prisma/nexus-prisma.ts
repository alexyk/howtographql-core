/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      UserTutorial: UserTutorialObject
      Tutorial: TutorialObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      UserTutorialConnection: UserTutorialConnectionObject
      UserTutorialEdge: UserTutorialEdgeObject
      AggregateUserTutorial: AggregateUserTutorialObject
      TutorialConnection: TutorialConnectionObject
      TutorialEdge: TutorialEdgeObject
      AggregateTutorial: AggregateTutorialObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      UserTutorialSubscriptionPayload: UserTutorialSubscriptionPayloadObject
      UserTutorialPreviousValues: UserTutorialPreviousValuesObject
      TutorialSubscriptionPayload: TutorialSubscriptionPayloadObject
      TutorialPreviousValues: TutorialPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      UserTutorial: UserTutorialFieldDetails
      Tutorial: TutorialFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      UserTutorialConnection: UserTutorialConnectionFieldDetails
      UserTutorialEdge: UserTutorialEdgeFieldDetails
      AggregateUserTutorial: AggregateUserTutorialFieldDetails
      TutorialConnection: TutorialConnectionFieldDetails
      TutorialEdge: TutorialEdgeFieldDetails
      AggregateTutorial: AggregateTutorialFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      UserTutorialSubscriptionPayload: UserTutorialSubscriptionPayloadFieldDetails
      UserTutorialPreviousValues: UserTutorialPreviousValuesFieldDetails
      TutorialSubscriptionPayload: TutorialSubscriptionPayloadFieldDetails
      TutorialPreviousValues: TutorialPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      UserTutorialWhereInput: UserTutorialWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      TutorialWhereInput: TutorialWhereInputInputObject
      UserTutorialWhereUniqueInput: UserTutorialWhereUniqueInputInputObject
      TutorialWhereUniqueInput: TutorialWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      UserTutorialCreateManyWithoutUserInput: UserTutorialCreateManyWithoutUserInputInputObject
      UserTutorialCreateWithoutUserInput: UserTutorialCreateWithoutUserInputInputObject
      TutorialCreateOneWithoutUserTutorialsInput: TutorialCreateOneWithoutUserTutorialsInputInputObject
      TutorialCreateWithoutUserTutorialsInput: TutorialCreateWithoutUserTutorialsInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      UserTutorialUpdateManyWithoutUserInput: UserTutorialUpdateManyWithoutUserInputInputObject
      UserTutorialUpdateWithWhereUniqueWithoutUserInput: UserTutorialUpdateWithWhereUniqueWithoutUserInputInputObject
      UserTutorialUpdateWithoutUserDataInput: UserTutorialUpdateWithoutUserDataInputInputObject
      TutorialUpdateOneWithoutUserTutorialsInput: TutorialUpdateOneWithoutUserTutorialsInputInputObject
      TutorialUpdateWithoutUserTutorialsDataInput: TutorialUpdateWithoutUserTutorialsDataInputInputObject
      TutorialUpsertWithoutUserTutorialsInput: TutorialUpsertWithoutUserTutorialsInputInputObject
      UserTutorialUpsertWithWhereUniqueWithoutUserInput: UserTutorialUpsertWithWhereUniqueWithoutUserInputInputObject
      UserTutorialScalarWhereInput: UserTutorialScalarWhereInputInputObject
      UserTutorialUpdateManyWithWhereNestedInput: UserTutorialUpdateManyWithWhereNestedInputInputObject
      UserTutorialUpdateManyDataInput: UserTutorialUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      UserTutorialCreateInput: UserTutorialCreateInputInputObject
      UserCreateOneWithoutUserTutorialsInput: UserCreateOneWithoutUserTutorialsInputInputObject
      UserCreateWithoutUserTutorialsInput: UserCreateWithoutUserTutorialsInputInputObject
      UserTutorialUpdateInput: UserTutorialUpdateInputInputObject
      UserUpdateOneWithoutUserTutorialsInput: UserUpdateOneWithoutUserTutorialsInputInputObject
      UserUpdateWithoutUserTutorialsDataInput: UserUpdateWithoutUserTutorialsDataInputInputObject
      UserUpsertWithoutUserTutorialsInput: UserUpsertWithoutUserTutorialsInputInputObject
      UserTutorialUpdateManyMutationInput: UserTutorialUpdateManyMutationInputInputObject
      TutorialCreateInput: TutorialCreateInputInputObject
      UserTutorialCreateManyWithoutTutorialInput: UserTutorialCreateManyWithoutTutorialInputInputObject
      UserTutorialCreateWithoutTutorialInput: UserTutorialCreateWithoutTutorialInputInputObject
      TutorialUpdateInput: TutorialUpdateInputInputObject
      UserTutorialUpdateManyWithoutTutorialInput: UserTutorialUpdateManyWithoutTutorialInputInputObject
      UserTutorialUpdateWithWhereUniqueWithoutTutorialInput: UserTutorialUpdateWithWhereUniqueWithoutTutorialInputInputObject
      UserTutorialUpdateWithoutTutorialDataInput: UserTutorialUpdateWithoutTutorialDataInputInputObject
      UserTutorialUpsertWithWhereUniqueWithoutTutorialInput: UserTutorialUpsertWithWhereUniqueWithoutTutorialInputInputObject
      TutorialUpdateManyMutationInput: TutorialUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      UserTutorialSubscriptionWhereInput: UserTutorialSubscriptionWhereInputInputObject
      TutorialSubscriptionWhereInput: TutorialSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    UserTutorialOrderByInput: UserTutorialOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    TutorialOrderByInput: TutorialOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'user', args?: QueryUserArgs[] | false, alias?: string  } 
  | { name: 'users', args?: QueryUsersArgs[] | false, alias?: string  } 
  | { name: 'usersConnection', args?: QueryUsersConnectionArgs[] | false, alias?: string  } 
  | { name: 'userTutorial', args?: QueryUserTutorialArgs[] | false, alias?: string  } 
  | { name: 'userTutorials', args?: QueryUserTutorialsArgs[] | false, alias?: string  } 
  | { name: 'userTutorialsConnection', args?: QueryUserTutorialsConnectionArgs[] | false, alias?: string  } 
  | { name: 'tutorial', args?: QueryTutorialArgs[] | false, alias?: string  } 
  | { name: 'tutorials', args?: QueryTutorialsArgs[] | false, alias?: string  } 
  | { name: 'tutorialsConnection', args?: QueryTutorialsConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'user'
  | 'users'
  | 'usersConnection'
  | 'userTutorial'
  | 'userTutorials'
  | 'userTutorialsConnection'
  | 'tutorial'
  | 'tutorials'
  | 'tutorialsConnection'


type QueryUserArgs =
  | 'where'
type QueryUsersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUsersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserTutorialArgs =
  | 'where'
type QueryUserTutorialsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryUserTutorialsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTutorialArgs =
  | 'where'
type QueryTutorialsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryTutorialsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  user: {
    type: 'User'
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  users: {
    type: 'User'
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  }
  usersConnection: {
    type: 'UserConnection'
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  }
  userTutorial: {
    type: 'UserTutorial'
    args: Record<QueryUserTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserTutorialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial | null> | prisma.UserTutorial | null
  }
  userTutorials: {
    type: 'UserTutorial'
    args: Record<QueryUserTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserTutorialWhereInput | null, orderBy?: prisma.UserTutorialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial[]> | prisma.UserTutorial[]
  }
  userTutorialsConnection: {
    type: 'UserTutorialConnection'
    args: Record<QueryUserTutorialsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserTutorialWhereInput | null, orderBy?: prisma.UserTutorialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorialConnection> | prisma.UserTutorialConnection
  }
  tutorial: {
    type: 'Tutorial'
    args: Record<QueryTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: TutorialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial | null> | prisma.Tutorial | null
  }
  tutorials: {
    type: 'Tutorial'
    args: Record<QueryTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TutorialWhereInput | null, orderBy?: prisma.TutorialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial[]> | prisma.Tutorial[]
  }
  tutorialsConnection: {
    type: 'TutorialConnection'
    args: Record<QueryTutorialsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: TutorialWhereInput | null, orderBy?: prisma.TutorialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TutorialConnection> | prisma.TutorialConnection
  }
}
  

// Types for User

type UserObject =
  | UserFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'githubHandle', args?: [] | false, alias?: string  } 
  | { name: 'githubUserId', args?: [] | false, alias?: string  } 
  | { name: 'avatarUrl', args?: [] | false, alias?: string  } 
  | { name: 'bio', args?: [] | false, alias?: string  } 
  | { name: 'contributor', args?: [] | false, alias?: string  } 
  | { name: 'expertise', args?: [] | false, alias?: string  } 
  | { name: 'userTutorials', args?: UserUserTutorialsArgs[] | false, alias?: string  } 

type UserFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'email'
  | 'githubHandle'
  | 'githubUserId'
  | 'avatarUrl'
  | 'bio'
  | 'contributor'
  | 'expertise'
  | 'userTutorials'


type UserUserTutorialsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface UserFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  githubHandle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  githubUserId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  avatarUrl: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bio: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  contributor: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  expertise: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  userTutorials: {
    type: 'UserTutorial'
    args: Record<UserUserTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: UserTutorialWhereInput | null, orderBy?: prisma.UserTutorialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial[]> | prisma.UserTutorial[]
  }
}
  

// Types for UserTutorial

type UserTutorialObject =
  | UserTutorialFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'user', args?: [] | false, alias?: string  } 
  | { name: 'tutorial', args?: [] | false, alias?: string  } 
  | { name: 'upvoted', args?: [] | false, alias?: string  } 
  | { name: 'saved', args?: [] | false, alias?: string  } 
  | { name: 'currentChapter', args?: [] | false, alias?: string  } 

type UserTutorialFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'user'
  | 'tutorial'
  | 'upvoted'
  | 'saved'
  | 'currentChapter'



  

export interface UserTutorialFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  user: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserTutorial">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  tutorial: {
    type: 'Tutorial'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserTutorial">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial | null> | prisma.Tutorial | null
  }
  upvoted: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  saved: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  currentChapter: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Tutorial

type TutorialObject =
  | TutorialFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'gatsbyID', args?: [] | false, alias?: string  } 
  | { name: 'numberofChapters', args?: [] | false, alias?: string  } 
  | { name: 'numberofStudents', args?: [] | false, alias?: string  } 
  | { name: 'upvotes', args?: [] | false, alias?: string  } 
  | { name: 'userTutorials', args?: TutorialUserTutorialsArgs[] | false, alias?: string  } 

type TutorialFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'gatsbyID'
  | 'numberofChapters'
  | 'numberofStudents'
  | 'upvotes'
  | 'userTutorials'


type TutorialUserTutorialsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface TutorialFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  gatsbyID: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  numberofChapters: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  numberofStudents: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upvotes: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  userTutorials: {
    type: 'UserTutorial'
    args: Record<TutorialUserTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Tutorial">,
      args: { where?: UserTutorialWhereInput | null, orderBy?: prisma.UserTutorialOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial[]> | prisma.UserTutorial[]
  }
}
  

// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  }
  aggregate: {
    type: 'AggregateUser'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserEdgeFieldDetails {
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserFields =
  | 'count'



  

export interface AggregateUserFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for UserTutorialConnection

type UserTutorialConnectionObject =
  | UserTutorialConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type UserTutorialConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface UserTutorialConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserTutorialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'UserTutorialEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserTutorialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorialEdge[]> | prisma.UserTutorialEdge[]
  }
  aggregate: {
    type: 'AggregateUserTutorial'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserTutorialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUserTutorial> | prisma.AggregateUserTutorial
  }
}
  

// Types for UserTutorialEdge

type UserTutorialEdgeObject =
  | UserTutorialEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type UserTutorialEdgeFields =
  | 'node'
  | 'cursor'



  

export interface UserTutorialEdgeFieldDetails {
  node: {
    type: 'UserTutorial'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserTutorialEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial> | prisma.UserTutorial
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateUserTutorial

type AggregateUserTutorialObject =
  | AggregateUserTutorialFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateUserTutorialFields =
  | 'count'



  

export interface AggregateUserTutorialFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for TutorialConnection

type TutorialConnectionObject =
  | TutorialConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type TutorialConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface TutorialConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TutorialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'TutorialEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"TutorialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TutorialEdge[]> | prisma.TutorialEdge[]
  }
  aggregate: {
    type: 'AggregateTutorial'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TutorialConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateTutorial> | prisma.AggregateTutorial
  }
}
  

// Types for TutorialEdge

type TutorialEdgeObject =
  | TutorialEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type TutorialEdgeFields =
  | 'node'
  | 'cursor'



  

export interface TutorialEdgeFieldDetails {
  node: {
    type: 'Tutorial'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TutorialEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial> | prisma.Tutorial
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateTutorial

type AggregateTutorialObject =
  | AggregateTutorialFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateTutorialFields =
  | 'count'



  

export interface AggregateTutorialFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createUser', args?: MutationCreateUserArgs[] | false, alias?: string  } 
  | { name: 'updateUser', args?: MutationUpdateUserArgs[] | false, alias?: string  } 
  | { name: 'updateManyUsers', args?: MutationUpdateManyUsersArgs[] | false, alias?: string  } 
  | { name: 'upsertUser', args?: MutationUpsertUserArgs[] | false, alias?: string  } 
  | { name: 'deleteUser', args?: MutationDeleteUserArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUsers', args?: MutationDeleteManyUsersArgs[] | false, alias?: string  } 
  | { name: 'createUserTutorial', args?: MutationCreateUserTutorialArgs[] | false, alias?: string  } 
  | { name: 'updateUserTutorial', args?: MutationUpdateUserTutorialArgs[] | false, alias?: string  } 
  | { name: 'updateManyUserTutorials', args?: MutationUpdateManyUserTutorialsArgs[] | false, alias?: string  } 
  | { name: 'upsertUserTutorial', args?: MutationUpsertUserTutorialArgs[] | false, alias?: string  } 
  | { name: 'deleteUserTutorial', args?: MutationDeleteUserTutorialArgs[] | false, alias?: string  } 
  | { name: 'deleteManyUserTutorials', args?: MutationDeleteManyUserTutorialsArgs[] | false, alias?: string  } 
  | { name: 'createTutorial', args?: MutationCreateTutorialArgs[] | false, alias?: string  } 
  | { name: 'updateTutorial', args?: MutationUpdateTutorialArgs[] | false, alias?: string  } 
  | { name: 'updateManyTutorials', args?: MutationUpdateManyTutorialsArgs[] | false, alias?: string  } 
  | { name: 'upsertTutorial', args?: MutationUpsertTutorialArgs[] | false, alias?: string  } 
  | { name: 'deleteTutorial', args?: MutationDeleteTutorialArgs[] | false, alias?: string  } 
  | { name: 'deleteManyTutorials', args?: MutationDeleteManyTutorialsArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createUser'
  | 'updateUser'
  | 'updateManyUsers'
  | 'upsertUser'
  | 'deleteUser'
  | 'deleteManyUsers'
  | 'createUserTutorial'
  | 'updateUserTutorial'
  | 'updateManyUserTutorials'
  | 'upsertUserTutorial'
  | 'deleteUserTutorial'
  | 'deleteManyUserTutorials'
  | 'createTutorial'
  | 'updateTutorial'
  | 'updateManyTutorials'
  | 'upsertTutorial'
  | 'deleteTutorial'
  | 'deleteManyTutorials'


type MutationCreateUserArgs =
  | 'data'
type MutationUpdateUserArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUsersArgs =
  | 'data'
  | 'where'
type MutationUpsertUserArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserArgs =
  | 'where'
type MutationDeleteManyUsersArgs =
  | 'where'
type MutationCreateUserTutorialArgs =
  | 'data'
type MutationUpdateUserTutorialArgs =
  | 'data'
  | 'where'
type MutationUpdateManyUserTutorialsArgs =
  | 'data'
  | 'where'
type MutationUpsertUserTutorialArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteUserTutorialArgs =
  | 'where'
type MutationDeleteManyUserTutorialsArgs =
  | 'where'
type MutationCreateTutorialArgs =
  | 'data'
type MutationUpdateTutorialArgs =
  | 'data'
  | 'where'
type MutationUpdateManyTutorialsArgs =
  | 'data'
  | 'where'
type MutationUpsertTutorialArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteTutorialArgs =
  | 'where'
type MutationDeleteManyTutorialsArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createUser: {
    type: 'User'
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  updateUser: {
    type: 'User'
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updateManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUser: {
    type: 'User'
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  }
  deleteUser: {
    type: 'User'
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  deleteManyUsers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createUserTutorial: {
    type: 'UserTutorial'
    args: Record<MutationCreateUserTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserTutorialCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial> | prisma.UserTutorial
  }
  updateUserTutorial: {
    type: 'UserTutorial'
    args: Record<MutationUpdateUserTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserTutorialUpdateInput, where: UserTutorialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial | null> | prisma.UserTutorial | null
  }
  updateManyUserTutorials: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyUserTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserTutorialUpdateManyMutationInput, where?: UserTutorialWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertUserTutorial: {
    type: 'UserTutorial'
    args: Record<MutationUpsertUserTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserTutorialWhereUniqueInput, create: UserTutorialCreateInput, update: UserTutorialUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial> | prisma.UserTutorial
  }
  deleteUserTutorial: {
    type: 'UserTutorial'
    args: Record<MutationDeleteUserTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserTutorialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial | null> | prisma.UserTutorial | null
  }
  deleteManyUserTutorials: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyUserTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserTutorialWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createTutorial: {
    type: 'Tutorial'
    args: Record<MutationCreateTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TutorialCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial> | prisma.Tutorial
  }
  updateTutorial: {
    type: 'Tutorial'
    args: Record<MutationUpdateTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TutorialUpdateInput, where: TutorialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial | null> | prisma.Tutorial | null
  }
  updateManyTutorials: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: TutorialUpdateManyMutationInput, where?: TutorialWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertTutorial: {
    type: 'Tutorial'
    args: Record<MutationUpsertTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TutorialWhereUniqueInput, create: TutorialCreateInput, update: TutorialUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial> | prisma.Tutorial
  }
  deleteTutorial: {
    type: 'Tutorial'
    args: Record<MutationDeleteTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: TutorialWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial | null> | prisma.Tutorial | null
  }
  deleteManyTutorials: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyTutorialsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: TutorialWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'user', args?: SubscriptionUserArgs[] | false, alias?: string  } 
  | { name: 'userTutorial', args?: SubscriptionUserTutorialArgs[] | false, alias?: string  } 
  | { name: 'tutorial', args?: SubscriptionTutorialArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'user'
  | 'userTutorial'
  | 'tutorial'


type SubscriptionUserArgs =
  | 'where'
type SubscriptionUserTutorialArgs =
  | 'where'
type SubscriptionTutorialArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  user: {
    type: 'UserSubscriptionPayload'
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  }
  userTutorial: {
    type: 'UserTutorialSubscriptionPayload'
    args: Record<SubscriptionUserTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserTutorialSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorialSubscriptionPayload | null> | prisma.UserTutorialSubscriptionPayload | null
  }
  tutorial: {
    type: 'TutorialSubscriptionPayload'
    args: Record<SubscriptionTutorialArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: TutorialSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TutorialSubscriptionPayload | null> | prisma.TutorialSubscriptionPayload | null
  }
}
  

// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'User'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  }
}
  

// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'githubHandle', args?: [] | false, alias?: string  } 
  | { name: 'githubUserId', args?: [] | false, alias?: string  } 
  | { name: 'avatarUrl', args?: [] | false, alias?: string  } 
  | { name: 'bio', args?: [] | false, alias?: string  } 
  | { name: 'contributor', args?: [] | false, alias?: string  } 
  | { name: 'expertise', args?: [] | false, alias?: string  } 

type UserPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'email'
  | 'githubHandle'
  | 'githubUserId'
  | 'avatarUrl'
  | 'bio'
  | 'contributor'
  | 'expertise'



  

export interface UserPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  githubHandle: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  githubUserId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  avatarUrl: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  bio: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  contributor: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  expertise: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for UserTutorialSubscriptionPayload

type UserTutorialSubscriptionPayloadObject =
  | UserTutorialSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type UserTutorialSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface UserTutorialSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserTutorialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'UserTutorial'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserTutorialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorial | null> | prisma.UserTutorial | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'UserTutorialPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserTutorialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserTutorialPreviousValues | null> | prisma.UserTutorialPreviousValues | null
  }
}
  

// Types for UserTutorialPreviousValues

type UserTutorialPreviousValuesObject =
  | UserTutorialPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'upvoted', args?: [] | false, alias?: string  } 
  | { name: 'saved', args?: [] | false, alias?: string  } 
  | { name: 'currentChapter', args?: [] | false, alias?: string  } 

type UserTutorialPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'upvoted'
  | 'saved'
  | 'currentChapter'



  

export interface UserTutorialPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upvoted: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  saved: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  currentChapter: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for TutorialSubscriptionPayload

type TutorialSubscriptionPayloadObject =
  | TutorialSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type TutorialSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface TutorialSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"TutorialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Tutorial'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TutorialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Tutorial | null> | prisma.Tutorial | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'TutorialPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"TutorialSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.TutorialPreviousValues | null> | prisma.TutorialPreviousValues | null
  }
}
  

// Types for TutorialPreviousValues

type TutorialPreviousValuesObject =
  | TutorialPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'gatsbyID', args?: [] | false, alias?: string  } 
  | { name: 'numberofChapters', args?: [] | false, alias?: string  } 
  | { name: 'numberofStudents', args?: [] | false, alias?: string  } 
  | { name: 'upvotes', args?: [] | false, alias?: string  } 

type TutorialPreviousValuesFields =
  | 'id'
  | 'createdAt'
  | 'updatedAt'
  | 'name'
  | 'gatsbyID'
  | 'numberofChapters'
  | 'numberofStudents'
  | 'upvotes'



  

export interface TutorialPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  gatsbyID: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  numberofChapters: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  numberofStudents: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  upvotes: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  


export interface UserWhereUniqueInput {
  id?: string | null
  email?: string | null
  githubHandle?: string | null
  githubUserId?: string | null
  expertise?: string | null
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  
export interface UserTutorialWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  user?: UserWhereInput | null
  tutorial?: TutorialWhereInput | null
  upvoted?: boolean | null
  upvoted_not?: boolean | null
  saved?: boolean | null
  saved_not?: boolean | null
  currentChapter?: number | null
  currentChapter_not?: number | null
  currentChapter_in?: number[]
  currentChapter_not_in?: number[]
  currentChapter_lt?: number | null
  currentChapter_lte?: number | null
  currentChapter_gt?: number | null
  currentChapter_gte?: number | null
  AND?: UserTutorialWhereInput[]
  OR?: UserTutorialWhereInput[]
  NOT?: UserTutorialWhereInput[]
}
export type UserTutorialWhereInputInputObject =
  | Extract<keyof UserTutorialWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'user', alias?: string  } 
  | { name: 'tutorial', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'upvoted_not', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'saved_not', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  | { name: 'currentChapter_not', alias?: string  } 
  | { name: 'currentChapter_in', alias?: string  } 
  | { name: 'currentChapter_not_in', alias?: string  } 
  | { name: 'currentChapter_lt', alias?: string  } 
  | { name: 'currentChapter_lte', alias?: string  } 
  | { name: 'currentChapter_gt', alias?: string  } 
  | { name: 'currentChapter_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  githubHandle?: string | null
  githubHandle_not?: string | null
  githubHandle_in?: string[]
  githubHandle_not_in?: string[]
  githubHandle_lt?: string | null
  githubHandle_lte?: string | null
  githubHandle_gt?: string | null
  githubHandle_gte?: string | null
  githubHandle_contains?: string | null
  githubHandle_not_contains?: string | null
  githubHandle_starts_with?: string | null
  githubHandle_not_starts_with?: string | null
  githubHandle_ends_with?: string | null
  githubHandle_not_ends_with?: string | null
  githubUserId?: string | null
  githubUserId_not?: string | null
  githubUserId_in?: string[]
  githubUserId_not_in?: string[]
  githubUserId_lt?: string | null
  githubUserId_lte?: string | null
  githubUserId_gt?: string | null
  githubUserId_gte?: string | null
  githubUserId_contains?: string | null
  githubUserId_not_contains?: string | null
  githubUserId_starts_with?: string | null
  githubUserId_not_starts_with?: string | null
  githubUserId_ends_with?: string | null
  githubUserId_not_ends_with?: string | null
  avatarUrl?: string | null
  avatarUrl_not?: string | null
  avatarUrl_in?: string[]
  avatarUrl_not_in?: string[]
  avatarUrl_lt?: string | null
  avatarUrl_lte?: string | null
  avatarUrl_gt?: string | null
  avatarUrl_gte?: string | null
  avatarUrl_contains?: string | null
  avatarUrl_not_contains?: string | null
  avatarUrl_starts_with?: string | null
  avatarUrl_not_starts_with?: string | null
  avatarUrl_ends_with?: string | null
  avatarUrl_not_ends_with?: string | null
  bio?: string | null
  bio_not?: string | null
  bio_in?: string[]
  bio_not_in?: string[]
  bio_lt?: string | null
  bio_lte?: string | null
  bio_gt?: string | null
  bio_gte?: string | null
  bio_contains?: string | null
  bio_not_contains?: string | null
  bio_starts_with?: string | null
  bio_not_starts_with?: string | null
  bio_ends_with?: string | null
  bio_not_ends_with?: string | null
  contributor?: boolean | null
  contributor_not?: boolean | null
  expertise?: string | null
  expertise_not?: string | null
  expertise_in?: string[]
  expertise_not_in?: string[]
  expertise_lt?: string | null
  expertise_lte?: string | null
  expertise_gt?: string | null
  expertise_gte?: string | null
  expertise_contains?: string | null
  expertise_not_contains?: string | null
  expertise_starts_with?: string | null
  expertise_not_starts_with?: string | null
  expertise_ends_with?: string | null
  expertise_not_ends_with?: string | null
  userTutorials_every?: UserTutorialWhereInput | null
  userTutorials_some?: UserTutorialWhereInput | null
  userTutorials_none?: UserTutorialWhereInput | null
  AND?: UserWhereInput[]
  OR?: UserWhereInput[]
  NOT?: UserWhereInput[]
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubHandle_not', alias?: string  } 
  | { name: 'githubHandle_in', alias?: string  } 
  | { name: 'githubHandle_not_in', alias?: string  } 
  | { name: 'githubHandle_lt', alias?: string  } 
  | { name: 'githubHandle_lte', alias?: string  } 
  | { name: 'githubHandle_gt', alias?: string  } 
  | { name: 'githubHandle_gte', alias?: string  } 
  | { name: 'githubHandle_contains', alias?: string  } 
  | { name: 'githubHandle_not_contains', alias?: string  } 
  | { name: 'githubHandle_starts_with', alias?: string  } 
  | { name: 'githubHandle_not_starts_with', alias?: string  } 
  | { name: 'githubHandle_ends_with', alias?: string  } 
  | { name: 'githubHandle_not_ends_with', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'githubUserId_not', alias?: string  } 
  | { name: 'githubUserId_in', alias?: string  } 
  | { name: 'githubUserId_not_in', alias?: string  } 
  | { name: 'githubUserId_lt', alias?: string  } 
  | { name: 'githubUserId_lte', alias?: string  } 
  | { name: 'githubUserId_gt', alias?: string  } 
  | { name: 'githubUserId_gte', alias?: string  } 
  | { name: 'githubUserId_contains', alias?: string  } 
  | { name: 'githubUserId_not_contains', alias?: string  } 
  | { name: 'githubUserId_starts_with', alias?: string  } 
  | { name: 'githubUserId_not_starts_with', alias?: string  } 
  | { name: 'githubUserId_ends_with', alias?: string  } 
  | { name: 'githubUserId_not_ends_with', alias?: string  } 
  | { name: 'avatarUrl', alias?: string  } 
  | { name: 'avatarUrl_not', alias?: string  } 
  | { name: 'avatarUrl_in', alias?: string  } 
  | { name: 'avatarUrl_not_in', alias?: string  } 
  | { name: 'avatarUrl_lt', alias?: string  } 
  | { name: 'avatarUrl_lte', alias?: string  } 
  | { name: 'avatarUrl_gt', alias?: string  } 
  | { name: 'avatarUrl_gte', alias?: string  } 
  | { name: 'avatarUrl_contains', alias?: string  } 
  | { name: 'avatarUrl_not_contains', alias?: string  } 
  | { name: 'avatarUrl_starts_with', alias?: string  } 
  | { name: 'avatarUrl_not_starts_with', alias?: string  } 
  | { name: 'avatarUrl_ends_with', alias?: string  } 
  | { name: 'avatarUrl_not_ends_with', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'bio_not', alias?: string  } 
  | { name: 'bio_in', alias?: string  } 
  | { name: 'bio_not_in', alias?: string  } 
  | { name: 'bio_lt', alias?: string  } 
  | { name: 'bio_lte', alias?: string  } 
  | { name: 'bio_gt', alias?: string  } 
  | { name: 'bio_gte', alias?: string  } 
  | { name: 'bio_contains', alias?: string  } 
  | { name: 'bio_not_contains', alias?: string  } 
  | { name: 'bio_starts_with', alias?: string  } 
  | { name: 'bio_not_starts_with', alias?: string  } 
  | { name: 'bio_ends_with', alias?: string  } 
  | { name: 'bio_not_ends_with', alias?: string  } 
  | { name: 'contributor', alias?: string  } 
  | { name: 'contributor_not', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  | { name: 'expertise_not', alias?: string  } 
  | { name: 'expertise_in', alias?: string  } 
  | { name: 'expertise_not_in', alias?: string  } 
  | { name: 'expertise_lt', alias?: string  } 
  | { name: 'expertise_lte', alias?: string  } 
  | { name: 'expertise_gt', alias?: string  } 
  | { name: 'expertise_gte', alias?: string  } 
  | { name: 'expertise_contains', alias?: string  } 
  | { name: 'expertise_not_contains', alias?: string  } 
  | { name: 'expertise_starts_with', alias?: string  } 
  | { name: 'expertise_not_starts_with', alias?: string  } 
  | { name: 'expertise_ends_with', alias?: string  } 
  | { name: 'expertise_not_ends_with', alias?: string  } 
  | { name: 'userTutorials_every', alias?: string  } 
  | { name: 'userTutorials_some', alias?: string  } 
  | { name: 'userTutorials_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TutorialWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  gatsbyID?: string | null
  gatsbyID_not?: string | null
  gatsbyID_in?: string[]
  gatsbyID_not_in?: string[]
  gatsbyID_lt?: string | null
  gatsbyID_lte?: string | null
  gatsbyID_gt?: string | null
  gatsbyID_gte?: string | null
  gatsbyID_contains?: string | null
  gatsbyID_not_contains?: string | null
  gatsbyID_starts_with?: string | null
  gatsbyID_not_starts_with?: string | null
  gatsbyID_ends_with?: string | null
  gatsbyID_not_ends_with?: string | null
  numberofChapters?: number | null
  numberofChapters_not?: number | null
  numberofChapters_in?: number[]
  numberofChapters_not_in?: number[]
  numberofChapters_lt?: number | null
  numberofChapters_lte?: number | null
  numberofChapters_gt?: number | null
  numberofChapters_gte?: number | null
  numberofStudents?: number | null
  numberofStudents_not?: number | null
  numberofStudents_in?: number[]
  numberofStudents_not_in?: number[]
  numberofStudents_lt?: number | null
  numberofStudents_lte?: number | null
  numberofStudents_gt?: number | null
  numberofStudents_gte?: number | null
  upvotes?: number | null
  upvotes_not?: number | null
  upvotes_in?: number[]
  upvotes_not_in?: number[]
  upvotes_lt?: number | null
  upvotes_lte?: number | null
  upvotes_gt?: number | null
  upvotes_gte?: number | null
  userTutorials_every?: UserTutorialWhereInput | null
  userTutorials_some?: UserTutorialWhereInput | null
  userTutorials_none?: UserTutorialWhereInput | null
  AND?: TutorialWhereInput[]
  OR?: TutorialWhereInput[]
  NOT?: TutorialWhereInput[]
}
export type TutorialWhereInputInputObject =
  | Extract<keyof TutorialWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  | { name: 'gatsbyID_not', alias?: string  } 
  | { name: 'gatsbyID_in', alias?: string  } 
  | { name: 'gatsbyID_not_in', alias?: string  } 
  | { name: 'gatsbyID_lt', alias?: string  } 
  | { name: 'gatsbyID_lte', alias?: string  } 
  | { name: 'gatsbyID_gt', alias?: string  } 
  | { name: 'gatsbyID_gte', alias?: string  } 
  | { name: 'gatsbyID_contains', alias?: string  } 
  | { name: 'gatsbyID_not_contains', alias?: string  } 
  | { name: 'gatsbyID_starts_with', alias?: string  } 
  | { name: 'gatsbyID_not_starts_with', alias?: string  } 
  | { name: 'gatsbyID_ends_with', alias?: string  } 
  | { name: 'gatsbyID_not_ends_with', alias?: string  } 
  | { name: 'numberofChapters', alias?: string  } 
  | { name: 'numberofChapters_not', alias?: string  } 
  | { name: 'numberofChapters_in', alias?: string  } 
  | { name: 'numberofChapters_not_in', alias?: string  } 
  | { name: 'numberofChapters_lt', alias?: string  } 
  | { name: 'numberofChapters_lte', alias?: string  } 
  | { name: 'numberofChapters_gt', alias?: string  } 
  | { name: 'numberofChapters_gte', alias?: string  } 
  | { name: 'numberofStudents', alias?: string  } 
  | { name: 'numberofStudents_not', alias?: string  } 
  | { name: 'numberofStudents_in', alias?: string  } 
  | { name: 'numberofStudents_not_in', alias?: string  } 
  | { name: 'numberofStudents_lt', alias?: string  } 
  | { name: 'numberofStudents_lte', alias?: string  } 
  | { name: 'numberofStudents_gt', alias?: string  } 
  | { name: 'numberofStudents_gte', alias?: string  } 
  | { name: 'upvotes', alias?: string  } 
  | { name: 'upvotes_not', alias?: string  } 
  | { name: 'upvotes_in', alias?: string  } 
  | { name: 'upvotes_not_in', alias?: string  } 
  | { name: 'upvotes_lt', alias?: string  } 
  | { name: 'upvotes_lte', alias?: string  } 
  | { name: 'upvotes_gt', alias?: string  } 
  | { name: 'upvotes_gte', alias?: string  } 
  | { name: 'userTutorials_every', alias?: string  } 
  | { name: 'userTutorials_some', alias?: string  } 
  | { name: 'userTutorials_none', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserTutorialWhereUniqueInput {
  id?: string | null
}
export type UserTutorialWhereUniqueInputInputObject =
  | Extract<keyof UserTutorialWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface TutorialWhereUniqueInput {
  id?: string | null
  gatsbyID?: string | null
}
export type TutorialWhereUniqueInputInputObject =
  | Extract<keyof TutorialWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  
export interface UserCreateInput {
  name?: string
  email?: string | null
  githubHandle?: string
  githubUserId?: string
  avatarUrl?: string | null
  bio?: string | null
  contributor?: boolean | null
  expertise?: string | null
  userTutorials?: UserTutorialCreateManyWithoutUserInput | null
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'avatarUrl', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'contributor', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  | { name: 'userTutorials', alias?: string  } 
  
export interface UserTutorialCreateManyWithoutUserInput {
  create?: UserTutorialCreateWithoutUserInput[]
  connect?: UserTutorialWhereUniqueInput[]
}
export type UserTutorialCreateManyWithoutUserInputInputObject =
  | Extract<keyof UserTutorialCreateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserTutorialCreateWithoutUserInput {
  tutorial?: TutorialCreateOneWithoutUserTutorialsInput | null
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialCreateWithoutUserInputInputObject =
  | Extract<keyof UserTutorialCreateWithoutUserInput, string>
  | { name: 'tutorial', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface TutorialCreateOneWithoutUserTutorialsInput {
  create?: TutorialCreateWithoutUserTutorialsInput | null
  connect?: TutorialWhereUniqueInput | null
}
export type TutorialCreateOneWithoutUserTutorialsInputInputObject =
  | Extract<keyof TutorialCreateOneWithoutUserTutorialsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TutorialCreateWithoutUserTutorialsInput {
  name?: string
  gatsbyID?: string
  numberofChapters?: number
  numberofStudents?: number | null
  upvotes?: number | null
}
export type TutorialCreateWithoutUserTutorialsInputInputObject =
  | Extract<keyof TutorialCreateWithoutUserTutorialsInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  | { name: 'numberofChapters', alias?: string  } 
  | { name: 'numberofStudents', alias?: string  } 
  | { name: 'upvotes', alias?: string  } 
  
export interface UserUpdateInput {
  name?: string | null
  email?: string | null
  githubHandle?: string | null
  githubUserId?: string | null
  avatarUrl?: string | null
  bio?: string | null
  contributor?: boolean | null
  expertise?: string | null
  userTutorials?: UserTutorialUpdateManyWithoutUserInput | null
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'avatarUrl', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'contributor', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  | { name: 'userTutorials', alias?: string  } 
  
export interface UserTutorialUpdateManyWithoutUserInput {
  create?: UserTutorialCreateWithoutUserInput[]
  delete?: UserTutorialWhereUniqueInput[]
  connect?: UserTutorialWhereUniqueInput[]
  set?: UserTutorialWhereUniqueInput[]
  disconnect?: UserTutorialWhereUniqueInput[]
  update?: UserTutorialUpdateWithWhereUniqueWithoutUserInput[]
  upsert?: UserTutorialUpsertWithWhereUniqueWithoutUserInput[]
  deleteMany?: UserTutorialScalarWhereInput[]
  updateMany?: UserTutorialUpdateManyWithWhereNestedInput[]
}
export type UserTutorialUpdateManyWithoutUserInputInputObject =
  | Extract<keyof UserTutorialUpdateManyWithoutUserInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserTutorialUpdateWithWhereUniqueWithoutUserInput {
  where?: UserTutorialWhereUniqueInput
  data?: UserTutorialUpdateWithoutUserDataInput
}
export type UserTutorialUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof UserTutorialUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserTutorialUpdateWithoutUserDataInput {
  tutorial?: TutorialUpdateOneWithoutUserTutorialsInput | null
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialUpdateWithoutUserDataInputInputObject =
  | Extract<keyof UserTutorialUpdateWithoutUserDataInput, string>
  | { name: 'tutorial', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface TutorialUpdateOneWithoutUserTutorialsInput {
  create?: TutorialCreateWithoutUserTutorialsInput | null
  update?: TutorialUpdateWithoutUserTutorialsDataInput | null
  upsert?: TutorialUpsertWithoutUserTutorialsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: TutorialWhereUniqueInput | null
}
export type TutorialUpdateOneWithoutUserTutorialsInputInputObject =
  | Extract<keyof TutorialUpdateOneWithoutUserTutorialsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface TutorialUpdateWithoutUserTutorialsDataInput {
  name?: string | null
  gatsbyID?: string | null
  numberofChapters?: number | null
  numberofStudents?: number | null
  upvotes?: number | null
}
export type TutorialUpdateWithoutUserTutorialsDataInputInputObject =
  | Extract<keyof TutorialUpdateWithoutUserTutorialsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  | { name: 'numberofChapters', alias?: string  } 
  | { name: 'numberofStudents', alias?: string  } 
  | { name: 'upvotes', alias?: string  } 
  
export interface TutorialUpsertWithoutUserTutorialsInput {
  update?: TutorialUpdateWithoutUserTutorialsDataInput
  create?: TutorialCreateWithoutUserTutorialsInput
}
export type TutorialUpsertWithoutUserTutorialsInputInputObject =
  | Extract<keyof TutorialUpsertWithoutUserTutorialsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserTutorialUpsertWithWhereUniqueWithoutUserInput {
  where?: UserTutorialWhereUniqueInput
  update?: UserTutorialUpdateWithoutUserDataInput
  create?: UserTutorialCreateWithoutUserInput
}
export type UserTutorialUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof UserTutorialUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserTutorialScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  upvoted?: boolean | null
  upvoted_not?: boolean | null
  saved?: boolean | null
  saved_not?: boolean | null
  currentChapter?: number | null
  currentChapter_not?: number | null
  currentChapter_in?: number[]
  currentChapter_not_in?: number[]
  currentChapter_lt?: number | null
  currentChapter_lte?: number | null
  currentChapter_gt?: number | null
  currentChapter_gte?: number | null
  AND?: UserTutorialScalarWhereInput[]
  OR?: UserTutorialScalarWhereInput[]
  NOT?: UserTutorialScalarWhereInput[]
}
export type UserTutorialScalarWhereInputInputObject =
  | Extract<keyof UserTutorialScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'upvoted_not', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'saved_not', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  | { name: 'currentChapter_not', alias?: string  } 
  | { name: 'currentChapter_in', alias?: string  } 
  | { name: 'currentChapter_not_in', alias?: string  } 
  | { name: 'currentChapter_lt', alias?: string  } 
  | { name: 'currentChapter_lte', alias?: string  } 
  | { name: 'currentChapter_gt', alias?: string  } 
  | { name: 'currentChapter_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserTutorialUpdateManyWithWhereNestedInput {
  where?: UserTutorialScalarWhereInput
  data?: UserTutorialUpdateManyDataInput
}
export type UserTutorialUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof UserTutorialUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserTutorialUpdateManyDataInput {
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialUpdateManyDataInputInputObject =
  | Extract<keyof UserTutorialUpdateManyDataInput, string>
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface UserUpdateManyMutationInput {
  name?: string | null
  email?: string | null
  githubHandle?: string | null
  githubUserId?: string | null
  avatarUrl?: string | null
  bio?: string | null
  contributor?: boolean | null
  expertise?: string | null
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'avatarUrl', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'contributor', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  
export interface UserTutorialCreateInput {
  user?: UserCreateOneWithoutUserTutorialsInput | null
  tutorial?: TutorialCreateOneWithoutUserTutorialsInput | null
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialCreateInputInputObject =
  | Extract<keyof UserTutorialCreateInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'tutorial', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface UserCreateOneWithoutUserTutorialsInput {
  create?: UserCreateWithoutUserTutorialsInput | null
  connect?: UserWhereUniqueInput | null
}
export type UserCreateOneWithoutUserTutorialsInputInputObject =
  | Extract<keyof UserCreateOneWithoutUserTutorialsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserCreateWithoutUserTutorialsInput {
  name?: string
  email?: string | null
  githubHandle?: string
  githubUserId?: string
  avatarUrl?: string | null
  bio?: string | null
  contributor?: boolean | null
  expertise?: string | null
}
export type UserCreateWithoutUserTutorialsInputInputObject =
  | Extract<keyof UserCreateWithoutUserTutorialsInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'avatarUrl', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'contributor', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  
export interface UserTutorialUpdateInput {
  user?: UserUpdateOneWithoutUserTutorialsInput | null
  tutorial?: TutorialUpdateOneWithoutUserTutorialsInput | null
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialUpdateInputInputObject =
  | Extract<keyof UserTutorialUpdateInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'tutorial', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface UserUpdateOneWithoutUserTutorialsInput {
  create?: UserCreateWithoutUserTutorialsInput | null
  update?: UserUpdateWithoutUserTutorialsDataInput | null
  upsert?: UserUpsertWithoutUserTutorialsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: UserWhereUniqueInput | null
}
export type UserUpdateOneWithoutUserTutorialsInputInputObject =
  | Extract<keyof UserUpdateOneWithoutUserTutorialsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserUpdateWithoutUserTutorialsDataInput {
  name?: string | null
  email?: string | null
  githubHandle?: string | null
  githubUserId?: string | null
  avatarUrl?: string | null
  bio?: string | null
  contributor?: boolean | null
  expertise?: string | null
}
export type UserUpdateWithoutUserTutorialsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutUserTutorialsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'githubHandle', alias?: string  } 
  | { name: 'githubUserId', alias?: string  } 
  | { name: 'avatarUrl', alias?: string  } 
  | { name: 'bio', alias?: string  } 
  | { name: 'contributor', alias?: string  } 
  | { name: 'expertise', alias?: string  } 
  
export interface UserUpsertWithoutUserTutorialsInput {
  update?: UserUpdateWithoutUserTutorialsDataInput
  create?: UserCreateWithoutUserTutorialsInput
}
export type UserUpsertWithoutUserTutorialsInputInputObject =
  | Extract<keyof UserUpsertWithoutUserTutorialsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface UserTutorialUpdateManyMutationInput {
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialUpdateManyMutationInputInputObject =
  | Extract<keyof UserTutorialUpdateManyMutationInput, string>
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface TutorialCreateInput {
  name?: string
  gatsbyID?: string
  numberofChapters?: number
  numberofStudents?: number | null
  upvotes?: number | null
  userTutorials?: UserTutorialCreateManyWithoutTutorialInput | null
}
export type TutorialCreateInputInputObject =
  | Extract<keyof TutorialCreateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  | { name: 'numberofChapters', alias?: string  } 
  | { name: 'numberofStudents', alias?: string  } 
  | { name: 'upvotes', alias?: string  } 
  | { name: 'userTutorials', alias?: string  } 
  
export interface UserTutorialCreateManyWithoutTutorialInput {
  create?: UserTutorialCreateWithoutTutorialInput[]
  connect?: UserTutorialWhereUniqueInput[]
}
export type UserTutorialCreateManyWithoutTutorialInputInputObject =
  | Extract<keyof UserTutorialCreateManyWithoutTutorialInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface UserTutorialCreateWithoutTutorialInput {
  user?: UserCreateOneWithoutUserTutorialsInput | null
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialCreateWithoutTutorialInputInputObject =
  | Extract<keyof UserTutorialCreateWithoutTutorialInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface TutorialUpdateInput {
  name?: string | null
  gatsbyID?: string | null
  numberofChapters?: number | null
  numberofStudents?: number | null
  upvotes?: number | null
  userTutorials?: UserTutorialUpdateManyWithoutTutorialInput | null
}
export type TutorialUpdateInputInputObject =
  | Extract<keyof TutorialUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  | { name: 'numberofChapters', alias?: string  } 
  | { name: 'numberofStudents', alias?: string  } 
  | { name: 'upvotes', alias?: string  } 
  | { name: 'userTutorials', alias?: string  } 
  
export interface UserTutorialUpdateManyWithoutTutorialInput {
  create?: UserTutorialCreateWithoutTutorialInput[]
  delete?: UserTutorialWhereUniqueInput[]
  connect?: UserTutorialWhereUniqueInput[]
  set?: UserTutorialWhereUniqueInput[]
  disconnect?: UserTutorialWhereUniqueInput[]
  update?: UserTutorialUpdateWithWhereUniqueWithoutTutorialInput[]
  upsert?: UserTutorialUpsertWithWhereUniqueWithoutTutorialInput[]
  deleteMany?: UserTutorialScalarWhereInput[]
  updateMany?: UserTutorialUpdateManyWithWhereNestedInput[]
}
export type UserTutorialUpdateManyWithoutTutorialInputInputObject =
  | Extract<keyof UserTutorialUpdateManyWithoutTutorialInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface UserTutorialUpdateWithWhereUniqueWithoutTutorialInput {
  where?: UserTutorialWhereUniqueInput
  data?: UserTutorialUpdateWithoutTutorialDataInput
}
export type UserTutorialUpdateWithWhereUniqueWithoutTutorialInputInputObject =
  | Extract<keyof UserTutorialUpdateWithWhereUniqueWithoutTutorialInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface UserTutorialUpdateWithoutTutorialDataInput {
  user?: UserUpdateOneWithoutUserTutorialsInput | null
  upvoted?: boolean | null
  saved?: boolean | null
  currentChapter?: number | null
}
export type UserTutorialUpdateWithoutTutorialDataInputInputObject =
  | Extract<keyof UserTutorialUpdateWithoutTutorialDataInput, string>
  | { name: 'user', alias?: string  } 
  | { name: 'upvoted', alias?: string  } 
  | { name: 'saved', alias?: string  } 
  | { name: 'currentChapter', alias?: string  } 
  
export interface UserTutorialUpsertWithWhereUniqueWithoutTutorialInput {
  where?: UserTutorialWhereUniqueInput
  update?: UserTutorialUpdateWithoutTutorialDataInput
  create?: UserTutorialCreateWithoutTutorialInput
}
export type UserTutorialUpsertWithWhereUniqueWithoutTutorialInputInputObject =
  | Extract<keyof UserTutorialUpsertWithWhereUniqueWithoutTutorialInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface TutorialUpdateManyMutationInput {
  name?: string | null
  gatsbyID?: string | null
  numberofChapters?: number | null
  numberofStudents?: number | null
  upvotes?: number | null
}
export type TutorialUpdateManyMutationInputInputObject =
  | Extract<keyof TutorialUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'gatsbyID', alias?: string  } 
  | { name: 'numberofChapters', alias?: string  } 
  | { name: 'numberofStudents', alias?: string  } 
  | { name: 'upvotes', alias?: string  } 
  
export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserWhereInput | null
  AND?: UserSubscriptionWhereInput[]
  OR?: UserSubscriptionWhereInput[]
  NOT?: UserSubscriptionWhereInput[]
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface UserTutorialSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: UserTutorialWhereInput | null
  AND?: UserTutorialSubscriptionWhereInput[]
  OR?: UserTutorialSubscriptionWhereInput[]
  NOT?: UserTutorialSubscriptionWhereInput[]
}
export type UserTutorialSubscriptionWhereInputInputObject =
  | Extract<keyof UserTutorialSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface TutorialSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: TutorialWhereInput | null
  AND?: TutorialSubscriptionWhereInput[]
  OR?: TutorialSubscriptionWhereInput[]
  NOT?: TutorialSubscriptionWhereInput[]
}
export type TutorialSubscriptionWhereInputInputObject =
  | Extract<keyof TutorialSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type UserTutorialOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'upvoted_ASC'
  | 'upvoted_DESC'
  | 'saved_ASC'
  | 'saved_DESC'
  | 'currentChapter_ASC'
  | 'currentChapter_DESC'
  
export type UserOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'githubHandle_ASC'
  | 'githubHandle_DESC'
  | 'githubUserId_ASC'
  | 'githubUserId_DESC'
  | 'avatarUrl_ASC'
  | 'avatarUrl_DESC'
  | 'bio_ASC'
  | 'bio_DESC'
  | 'contributor_ASC'
  | 'contributor_DESC'
  | 'expertise_ASC'
  | 'expertise_DESC'
  
export type TutorialOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'gatsbyID_ASC'
  | 'gatsbyID_DESC'
  | 'numberofChapters_ASC'
  | 'numberofChapters_DESC'
  | 'numberofStudents_ASC'
  | 'numberofStudents_DESC'
  | 'upvotes_ASC'
  | 'upvotes_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  